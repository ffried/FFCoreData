name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  validate-linux-tests:
    runs-on: macos-latest
    steps:
      - run: sudo xcode-select -s /Applications/Xcode_12.1.app/Contents/Developer
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .build
          key: ${{runner.os}}-spm-${{hashFiles('**/Package.resolved')}}
          restore-keys: |
            ${{runner.os}}-spm-
      - name: Generate Linux Tests
        run: swift test --generate-linuxmain
      - name: Check for git differences
        run: git diff --exit-code

  # test-spm:
  #   strategy:
  #     matrix:
  #       os:
  #         - macos-latest
  #         # - ubuntu-20.04

  #   runs-on: ${{matrix.os}}
  #   steps:
  #     - run: sudo xcode-select -s /Applications/Xcode_12.2.app/Contents/Developer
  #       if: runner.os == 'macOS'
  #     - name: Install Swift
  #       if: runner.os == 'Linux'
  #       uses: sersoft-gmbh/SwiftyActions@v1
  #       with:
  #         release-version: 5.3
  #         platform: ${{matrix.os}}
  #     - uses: actions/checkout@v2
  #     - uses: actions/cache@v2
  #       with:
  #         path: .build
  #         key: ${{runner.os}}-spm-${{hashFiles('**/Package.resolved')}}
  #         restore-keys: |
  #           ${{runner.os}}-spm-
  #     - name: Build & Test
  #       run: swift test -v --parallel --enable-code-coverage
  #     - name: Generate Coverage Files
  #       if: runner.os == 'macOS'
  #       run: xcrun llvm-cov export -format="lcov" .build/debug/*PackageTests.xctest/Contents/MacOS/*PackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
  #     - name: Generate Coverage Files
  #       if: runner.os == 'Linux'
  #       run: llvm-cov export -format="lcov" .build/debug/*PackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
  #     - uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{secrets.CODECOV_TOKEN}}
  #         file: coverage.lcov
  #         fail_ci_if_error: true

  test-xcode:
    runs-on: macos-latest
    strategy:
      matrix:
        action: [test]
        destination:
          - platform=macOS
          - platform=iOS Simulator,OS=latest,name=iPhone 12 Pro
          - platform=iOS Simulator,OS=latest,name=iPad Pro (11-inch) (2nd generation)
          - platform=tvOS Simulator,OS=latest,name=Apple TV 4K
        # include:
        #   - action: build
        #     destination: platform=watchOS Simulator,OS=latest,name=Apple Watch Series 5 - 44mm
    steps:
      - run: sudo xcode-select -s /Applications/Xcode_12.1.app/Contents/Developer
      - uses: actions/checkout@v2
      - uses: sersoft-gmbh/xcodebuild-action@v1
        with:
          spm-package: "./"
          scheme: FFCoreData
          destination: ${{matrix.destination}}
          action: ${{matrix.action}}
          build-settings: -parallel-testing-enabled YES -enableCodeCoverage YES
      - uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
        if: matrix.action == 'test'
