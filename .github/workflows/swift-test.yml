name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-spm:
    strategy:
      matrix:
        os: [ macos-latest ]
        swift-version: [ 5.5, 5.6 ]

    runs-on: ${{matrix.os}}

    steps:
      - if: runner.os == 'macOS'
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: ^13.0
      - name: Install Swift
        if: runner.os == 'Linux'
        uses: sersoft-gmbh/swifty-linux-action@v2.0.0
        with:
          release-version: ${{matrix.swift-version}}
          platform: ${{matrix.os}}
          github-token: ${{secrets.GITHUB_TOKEN}}
      - name: Read OS Version
        uses: sersoft-gmbh/os-version-action@v2.0.0
        id: os-version
      - name: Read Swift Version
        uses: sersoft-gmbh/swift-version-action@v2.0.0
        id: swift-version
      - uses: actions/checkout@v3
      - uses: actions/cache@v3.0.5
        with:
          path: .build
          key: ${{runner.os}}-${{steps.os-version.outputs.version}}-${{github.repository}}-spm-${{steps.swift-version.outputs.version}}-${{hashFiles('**/Package.resolved')}}
          restore-keys: |
            ${{runner.os}}-${{steps.os-version.outputs.version}}-${{github.repository}}-spm-${{steps.swift-version.outputs.version}}-
      - name: Workaround Package.resolved format issues
        if: ${{ startsWith(steps.swift-version.outputs.version, '5.5') }}
        run: rm -rf Package.resolved
      - name: Build & Test
        run: swift test -v --parallel --enable-code-coverage
      - name: Generate Coverage Files
        uses: sersoft-gmbh/swift-coverage-action@v3.0.0
        id: coverage-files
      - uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
          fail_ci_if_error: true

  test-xcode:
    runs-on: macos-latest
    strategy:
      matrix:
        action: [ test ]
        destination:
          - platform=macOS
          - platform=iOS Simulator,OS=latest,name=iPhone 12 Pro
          - platform=iOS Simulator,OS=latest,name=iPad Pro (11-inch) (2nd generation)
          - platform=tvOS Simulator,OS=latest,name=Apple TV 4K
        # Watch currently doesn't work because there's no XCTest on watchOS
        # include:
        #   - action: build
        #     destination: platform=watchOS Simulator,OS=latest,name=Apple Watch Series 6 - 44mm
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: ^13.0
      - name: Read Swift Version
        uses: sersoft-gmbh/swift-version-action@v2.0.0
        id: swift-version
      - uses: actions/checkout@v3
      - name: Workaround Package.resolved format issues
        if: ${{ startsWith(steps.swift-version.outputs.version, '5.5') }}
        run: rm -rf Package.resolved
      - uses: sersoft-gmbh/xcodebuild-action@v2.0.0
        with:
          spm-package: './'
          scheme: FFCoreData
          destination: ${{matrix.destination}}
          action: ${{matrix.action}}
          parallel-testing-enabled: true
          enable-code-coverage: true
      - uses: sersoft-gmbh/swift-coverage-action@v3.0.0
        id: coverage-files
        if: matrix.action == 'test'
      - uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
          fail_ci_if_error: true
        if: matrix.action == 'test'
