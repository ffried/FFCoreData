if: (branch = master) OR (type = pull_request)
# OR (tag =~ /^\d+\.\d+\.\d+(-.*)?$/)

stages:
  - name: validate tests
  - name: test
  # - name: publish docs
  #   if: tag =~ /^\d+\.\d+\.\d+(-.*)?$/

os: osx
language: swift
xcode_workspace: Xcode/FFCoreData.xcworkspace
xcode_scheme: FFCoreData

definitions:
  momc_script: &momc_script |
    xcrun --show-sdk-path
    xcrun --sdk macosx --show-sdk-path
    xcrun momc --sdkroot "$(xcrun --sdk macosx --show-sdk-path)" \
      --macosx-deployment-target "10.12" \
      --module "FFCoreDataTests" \
      "$(pwd)/Tests/FFCoreDataTests/Models/TestModel.xcdatamodeld" \
    "$(pwd)/Tests/FFCoreDataTests/Models"

jobs:
  include:
    - stage: validate tests
      name: Validate SwiftPM generated linux test files
      osx_image: xcode11
      before_script: *momc_script
      script: swift test --generate-linuxmain && git diff --exit-code

    # - &linux
    #   stage: test
    #   name: SwiftPM Linux Release
    #   os: linux
    #   dist: bionic
    #   language: generic
    #   addons:
    #     apt:
    #       update: true
    #       packages:
    #         - libatomic1
    #         - libbsd0
    #         - libcurl4
    #         - libxml2
    #         - libedit2
    #         - libsqlite3-0
    #         - libc6-dev
    #         - binutils
    #         - libgcc-5-dev
    #         - libstdc++-5-dev
    #         - libpython2.7
    #         - tzdata
    #         - git
    #         - pkg-config
    #         - curl
    #   env:
    #     - SWIFT_SKIP_APT=1
    #     - SWIFT_INSTALL_TARGET="./.swift"
    #     - SWIFT_PLATFORM="ubuntu18.04"
    #     - SWIFT_BRANCH="swift-5.1.1-release"
    #     - SWIFT_VERSION="swift-5.1.1-RELEASE"
    #   install: eval "$(curl -fsL 'https://bitbucket.org/!api/2.0/snippets/sersoftgmbh/7AgnAp/files/install_swift_linux.sh')"
    #   script: ./.swift/usr/bin/swift test --parallel

    # - <<: *linux
    #   name: SwiftPM Linux Beta
    #   env:
    #     - SWIFT_SKIP_APT=1
    #     - SWIFT_INSTALL_TARGET="./.swift"
    #     - SWIFT_PLATFORM="ubuntu18.04"
    #     - SWIFT_BRANCH="swift-5.2-branch"
    #     - SWIFT_VERSION="swift-5.2-DEVELOPMENT-SNAPSHOT-2019-11-11-a"

    - &macOS
      stage: test
      name: SwiftPM macOS Release
      osx_image: xcode11
      before_script: *momc_script
      script: swift test --parallel

    # - <<: *macOS
    #   name: SwiftPM macOS Beta
    #   osx_image: xcode11.2

    - &xcode
      stage: test
      name: macOS Swift Release
      osx_image: xcode11
      xcode_destination: platform=macOS
      after_success: bash <(curl -fsL https://codecov.io/bash) -J "FFCoreData"

    # - <<: *xcode
    #   name: macOS Swift Beta
    #   osx_image: xcode11.2
    #   xcode_destination: platform=macOS

    - <<: *xcode
      name: iOS Swift Release
      xcode_destination: platform=iOS Simulator,OS=latest,name=iPhone 11 Pro

    # - <<: *xcode
    #   name: iOS Swift Beta
    #   osx_image: xcode11.2
    #   xcode_destination: platform=iOS Simulator,OS=13.2,name=iPhone 11 Pro

    - <<: *xcode
      name: iPadOS Swift Release
      xcode_destination: platform=iOS Simulator,OS=latest,name=iPad Pro (11-inch)

    # - <<: *xcode
    #   name: iPadOS Swift Beta
    #   osx_image: xcode11.2
    #   xcode_destination: platform=iOS Simulator,OS=13.2,name=iPad Pro (11-inch)

    - <<: *xcode
      name: tvOS Swift Release
      xcode_destination: platform=tvOS Simulator,OS=latest,name=Apple TV 4K

    # - <<: *xcode
    #   name: tvOS Swift Beta
    #   osx_image: xcode11.2
    #   xcode_destination: platform=tvOS Simulator,OS=13.2,name=Apple TV 4K

    - <<: *xcode
      name: watchOS Swift Release (build only)
      script: |
        set -o pipefail
        xcodebuild -workspace "${TRAVIS_XCODE_WORKSPACE}" -scheme "${TRAVIS_XCODE_SCHEME}" \
          -destination 'platform=watchOS Simulator,OS=latest,name=Apple Watch Series 5 - 44mm' \
          build | xcpretty
      after_success: false

    # - <<: *xcode
    #   name: watchOS Swift Beta (build only)
    #   osx_image: xcode11.2
    #   script: |
    #     set -o pipefail
    #     xcodebuild -workspace "${TRAVIS_XCODE_WORKSPACE}" -scheme "${TRAVIS_XCODE_SCHEME}" \
    #       -destination 'platform=watchOS Simulator,OS=6.1,name=Apple Watch Series 5 - 44mm' \
    #       build | xcpretty
    #   after_success: false

    # - stage: publish docs
    #   name: Generate and publish documentation
    #   osx_image: xcode11
    #   install: gem install jazzy
    #   script: jazzy --module-version $TRAVIS_TAG
    #   deploy:
    #     provider: pages
    #     github-token: $GITHUB_DOCS_TOKEN
    #     skip-cleanup: true
    #     local-dir: docs
    #     target_branch: gh-pages
    #     on:
    #       tags: true
