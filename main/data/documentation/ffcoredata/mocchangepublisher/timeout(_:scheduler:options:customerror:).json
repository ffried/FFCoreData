{
  "abstract" : [
    {
      "text" : "Terminates publishing if the upstream publisher exceeds the specified time interval without producing an element.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FFCoreData\/documentation\/FFCoreData",
        "doc:\/\/FFCoreData\/documentation\/FFCoreData\/MOCChangePublisher",
        "doc:\/\/FFCoreData\/documentation\/FFCoreData\/MOCChangePublisher\/Publisher-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FFCoreData\/documentation\/FFCoreData\/MOCChangePublisher\/timeout(_:scheduler:options:customError:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Combine",
    "externalID" : "s:7Combine9PublisherPAAE7timeout_9scheduler7options11customErrorAA10PublishersO7TimeoutVy_xqd__G17SchedulerTimeType_6StrideQYd___qd__0J7OptionsQyd__Sg7FailureQzycSgtAA0J0Rd__lF::SYNTHESIZED::s:10FFCoreData18MOCChangePublisherV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "timeout"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "S"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "S"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "SchedulerTimeType"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Stride"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "scheduler"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "S"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "options"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "S"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "SchedulerOptions"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "externalParam",
        "text" : "customError"
      },
      {
        "kind" : "text",
        "text" : ": (() -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Failure"
      },
      {
        "kind" : "text",
        "text" : ")?) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7Combine10PublishersO",
        "text" : "Publishers"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:7Combine10PublishersO7TimeoutV",
        "text" : "Timeout"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "S"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "FFCoreData"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "timeout(_:scheduler:options:customError:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "timeout"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "interval"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "SchedulerTimeType"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Stride"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "scheduler"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "options"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "SchedulerOptions"
            },
            {
              "kind" : "text",
              "text" : "? = nil, "
            },
            {
              "kind" : "externalParam",
              "text" : "customError"
            },
            {
              "kind" : "text",
              "text" : ": (() -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Failure"
            },
            {
              "kind" : "text",
              "text" : ")? = nil) -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Combine10PublishersO",
              "text" : "Publishers"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Combine10PublishersO7TimeoutV",
              "text" : "Timeout"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "S"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7Combine9SchedulerP",
              "text" : "Scheduler"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A publisher that terminates if the specified interval elapses with no events received from the upstream publisher.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The maximum time interval the publisher can go without emitting an element, expressed in the time system of the scheduler.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "interval"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The scheduler on which to deliver events.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "scheduler"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Scheduler options that customize the delivery of elements.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "options"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A closure that executes if the publisher times out. The publisher sends the failure returned by this closure to the subscriber as the reason for termination.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "customError"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use ",
              "type" : "text"
            },
            {
              "code" : "Publisher\/timeout(_:scheduler:options:customError:)",
              "type" : "codeVoice"
            },
            {
              "text" : " to terminate a publisher if an element isn’t delivered within a timeout interval you specify.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In the example below, a ",
              "type" : "text"
            },
            {
              "code" : "PassthroughSubject",
              "type" : "codeVoice"
            },
            {
              "text" : " publishes ",
              "type" : "text"
            },
            {
              "text" : "doc:\/\/com.apple.documentation\/documentation\/Swift\/String",
              "type" : "text"
            },
            {
              "text" : " elements and is configured to time out if no new elements are received within its ",
              "type" : "text"
            },
            {
              "code" : "TIME_OUT",
              "type" : "codeVoice"
            },
            {
              "text" : " window of 5 seconds. A single value is published after the specified 2-second ",
              "type" : "text"
            },
            {
              "code" : "WAIT_TIME",
              "type" : "codeVoice"
            },
            {
              "text" : ", after which no more elements are available; the publisher then times out and completes normally.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "var WAIT_TIME : Int = 2",
            "var TIMEOUT_TIME : Int = 5",
            "",
            "let subject = PassthroughSubject<String, Never>()",
            "let cancellable = subject",
            "    .timeout(.seconds(TIMEOUT_TIME), scheduler: DispatchQueue.main, options: nil, customError:nil)",
            "    .sink(",
            "          receiveCompletion: { print (\"completion: \\($0) at \\(Date())\") },",
            "          receiveValue: { print (\"value: \\($0) at \\(Date())\") }",
            "     )",
            "",
            "DispatchQueue.main.asyncAfter(deadline: .now() + .seconds(WAIT_TIME),",
            "                              execute: { subject.send(\"Some data - sent after a delay of \\(WAIT_TIME) seconds\") } )",
            "",
            "\/\/ Prints: value: Some data - sent after a delay of 2 seconds at 2020-03-10 23:47:59 +0000",
            "\/\/         completion: finished at 2020-03-10 23:48:04 +0000"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If ",
              "type" : "text"
            },
            {
              "code" : "customError",
              "type" : "codeVoice"
            },
            {
              "text" : " is ",
              "type" : "text"
            },
            {
              "code" : "nil",
              "type" : "codeVoice"
            },
            {
              "text" : ", the publisher completes normally; if you provide a closure for the ",
              "type" : "text"
            },
            {
              "code" : "customError",
              "type" : "codeVoice"
            },
            {
              "text" : " argument, the upstream publisher is instead terminated upon timeout, and the error is delivered to the downstream.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/ffcoredata\/mocchangepublisher\/timeout(_:scheduler:options:customerror:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FFCoreData/documentation/FFCoreData": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFCoreData\/documentation\/FFCoreData",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FFCoreData",
  "type" : "topic",
  "url" : "\/documentation\/ffcoredata"
},
"doc://FFCoreData/documentation/FFCoreData/MOCChangePublisher": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MOCChangePublisher"
    }
  ],
  "identifier" : "doc:\/\/FFCoreData\/documentation\/FFCoreData\/MOCChangePublisher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MOCChangePublisher"
    }
  ],
  "role" : "symbol",
  "title" : "MOCChangePublisher",
  "type" : "topic",
  "url" : "\/documentation\/ffcoredata\/mocchangepublisher"
},
"doc://FFCoreData/documentation/FFCoreData/MOCChangePublisher/Publisher-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFCoreData\/documentation\/FFCoreData\/MOCChangePublisher\/Publisher-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Publisher Implementations",
  "type" : "topic",
  "url" : "\/documentation\/ffcoredata\/mocchangepublisher\/publisher-implementations"
},
"doc://FFCoreData/documentation/FFCoreData/MOCChangePublisher/timeout(_:scheduler:options:customError:)": {
  "abstract" : [
    {
      "text" : "Terminates publishing if the upstream publisher exceeds the specified time interval without producing an element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "SchedulerTimeType"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Stride"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "scheduler"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "options"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "SchedulerOptions"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine10PublishersO",
      "text" : "Publishers"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine10PublishersO7TimeoutV",
      "text" : "Timeout"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/FFCoreData\/documentation\/FFCoreData\/MOCChangePublisher\/timeout(_:scheduler:options:customError:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "timeout(_:scheduler:options:customError:)",
  "type" : "topic",
  "url" : "\/documentation\/ffcoredata\/mocchangepublisher\/timeout(_:scheduler:options:customerror:)"
}
}
}